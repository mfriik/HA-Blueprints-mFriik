blueprint:
  name: Confirmable Notification (Multi-Device)
  description: >-
    A script that sends an actionable notification with a confirmation before
    running the specified action. Works with multiple devices.
  domain: script
  source_url: https://github.com/YOUR_GITHUB_REPO_HERE
  input:
    notify_devices:
      name: Devices to notify
      description: Devices must run the official Home Assistant app.
      selector:
        device:
          multiple: true
          integration: mobile_app

    title:
      name: Title
      description: Title of the notification
      default: ""
      selector:
        text:

    message:
      name: Message
      description: Body text of the notification
      selector:
        text:

    confirm_text:
      name: Confirmation Button Text
      default: "Confirm"
      selector:
        text:

    confirm_action:
      name: Action on Confirmation
      default: []
      selector:
        action:

    dismiss_text:
      name: Dismiss Button Text
      default: "Dismiss"
      selector:
        text:

    dismiss_action:
      name: Action on Dismiss
      default: []
      selector:
        action:

mode: parallel

sequence:
  - alias: "Prepare action IDs"
    variables:
      base_context: "{{ context.id }}"
      action_confirm_prefix: "CONFIRM_"
      action_dismiss_prefix: "DISMISS_"

  - alias: "Send notifications to all devices"
    repeat:
      for_each: !input notify_devices
      sequence:
        - variables:
            action_confirm: "{{ action_confirm_prefix ~ base_context ~ '_' ~ repeat.item }}"
            action_dismiss: "{{ action_dismiss_prefix ~ base_context ~ '_' ~ repeat.item }}"
        - alias: "Send notification"
          domain: mobile_app
          type: notify
          device_id: "{{ repeat.item }}"
          title: !input title
          message: !input message
          data:
            actions:
              - action: "{{ action_confirm }}"
                title: !input confirm_text
              - action: "{{ action_dismiss }}"
                title: !input dismiss_text

  - alias: "Wait for first response"
    wait_for_trigger:
      - platform: event
        event_type: mobile_app_notification_action
        event_data:
          action: "{{ action_confirm_prefix ~ base_context }}_"
      - platform: event
        event_type: mobile_app_notification_action
        event_data:
          action: "{{ action_dismiss_prefix ~ base_context }}_"
    continue_on_timeout: false

  - alias: "Determine which action was taken"
    variables:
      received_action: "{{ wait.trigger.event.data.action }}"
      is_confirmed: "{{ 'CONFIRM_' in received_action }}"
      is_dismissed: "{{ 'DISMISS_' in received_action }}"
  
  - choose:
      - conditions: "{{ is_confirmed }}"
        sequence: !input confirm_action
      - conditions: "{{ is_dismissed }}"
        sequence: !input dismiss_action
