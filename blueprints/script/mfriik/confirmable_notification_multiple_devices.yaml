blueprint:
  name: Confirmable Multi-Device Notification
  description: >
    A script that sends an actionable notification to multiple mobile devices.
    The first device to respond wins.
    When confirmed or dismissed:
    - Runs the configured action
    - Clears the notification on all devices
    Requires the official Home Assistant app.
  domain: script
  author: mFriik (based on work by Rüdiger Müller)
  source_url: https://raw.githubusercontent.com/mfriik/HA-Blueprints-mFriik/refs/heads/main/blueprints/script/mfriik/confirmable_notification_multiple_devices.yaml
  input:
    notify_devices:
      name: Select notification actions
      description: >
        * Must be notify actions of type `notify.mobile_app_*`  
        * These will be called directly (not device_ids)
      selector:
        action: {}

    notification_tag:
      name: Notification Tag
      description: >
        Required: Unique identifier used to group and clear this notification.
        This is critical for proper functionality on iOS/Android and clearing after response.
      selector:
        text: {}

    decision_title:
      name: Notification Title
      selector:
        text: {}

    decision_message:
      name: Notification Message
      selector:
        text: {}

    decision_confirm_title:
      name: Confirmation Button Text
      default: Confirm
      selector:
        text: {}

    decision_dismiss_title:
      name: Dismiss Button Text
      default: Dismiss
      selector:
        text: {}

    max_wait_time:
      name: Maximum Wait Time (min)
      default: 60
      selector:
        number:
          min: 1.0
          max: 90.0
          step: 1.0
          mode: box
          unit_of_measurement: min

    log_confirm_name:
      name: Log Name (Confirm)
      default: Confirm
      selector:
        text: {}

    log_confirm_message:
      name: Log Message (Confirm)
      default: User confirmed the notification
      selector:
        text: {}

    log_dismiss_name:
      name: Log Name (Dismiss)
      default: Dismiss
      selector:
        text: {}

    log_dismiss_message:
      name: Log Message (Dismiss)
      default: User dismissed the notification
      selector:
        text: {}

    confirm_actions:
      name: Confirm Action(s)
      default: []
      selector:
        action: {}

    confirm_title:
      name: Follow-up Title (Confirm)
      default: Confirmed
      selector:
        text: {}

    confirm_message:
      name: Follow-up Message (Confirm)
      default: A user confirmed the notification
      selector:
        text: {}

    dismiss_actions:
      name: Dismiss Action(s)
      default: []
      selector:
        action: {}

    dismiss_title:
      name: Follow-up Title (Dismiss)
      default: Dismissed
      selector:
        text: {}

    dismiss_message:
      name: Follow-up Message (Dismiss)
      default: A user dismissed the notification
      selector:
        text: {}

mode: restart

sequence:
  - alias: Define action IDs
    variables:
      decision_confirm_action: "{{ 'CONFIRM_' ~ context.id }}"
      decision_dismiss_action: "{{ 'DISMISS_' ~ context.id }}"

  - alias: Send notification to all devices
    repeat:
      for_each: !input notify_devices
      sequence:
        - choose:
            - conditions:
                - condition: template
                  value_template: "{{ repeat.item.action.startswith('notify.mobile_app') }}"
              sequence:
                - alias: Send notification
                  action: "{{ repeat.item.action }}"
                  data:
                    title: !input decision_title
                    message: !input decision_message
                    data:
                      tag: !input notification_tag
                      actions:
                        - action: "{{ decision_confirm_action }}"
                          title: !input decision_confirm_title
                        - action: "{{ decision_dismiss_action }}"
                          title: !input decision_dismiss_title
        - alias: Log if not mobile_app
          choose:
            - conditions:
                - condition: template
                  value_template: "{{ not repeat.item.action.startswith('notify.mobile_app') }}"
              sequence:
                - service: logbook.log
                  data:
                    name: Skipped action
                    message: "Action {{ repeat.item.action }} is not a mobile_app notify service."

  - alias: Wait for first response (confirm or dismiss)
    wait_for_trigger:
      - platform: event
        event_type: mobile_app_notification_action
        event_data:
          action: "{{ decision_confirm_action }}"
      - platform: event
        event_type: mobile_app_notification_action
        event_data:
          action: "{{ decision_dismiss_action }}"
    timeout:
      minutes: !input max_wait_time
    continue_on_timeout: true

  - alias: Clear notification from all devices
    repeat:
      for_each: !input notify_devices
      sequence:
        - choose:
            - conditions:
                - condition: template
                  value_template: "{{ repeat.item.action.startswith('notify.mobile_app') }}"
              sequence:
                - action: "{{ repeat.item.action }}"
                  data:
                    message: clear_notification
                    data:
                      tag: !input notification_tag

  - alias: Handle response
    choose:
      - conditions:
          - condition: template
            value_template: "{{ wait.trigger is not none and wait.trigger.event.data.action == decision_confirm_action }}"
        sequence:
          - service: logbook.log
            data:
              name: !input log_confirm_name
              message: !input log_confirm_message
          - sequence: !input confirm_actions
          - repeat:
              for_each: !input notify_devices
              sequence:
                - choose:
                    - conditions:
                        - condition: template
                          value_template: "{{ repeat.item.action.startswith('notify.mobile_app') }}"
                      sequence:
                        - action: "{{ repeat.item.action }}"
                          data:
                            title: !input confirm_title
                            message: !input confirm_message
                            data:
                              tag: !input notification_tag
      - conditions:
          - condition: template
            value_template: "{{ wait.trigger is not none and wait.trigger.event.data.action == decision_dismiss_action }}"
        sequence:
          - service: logbook.log
            data:
              name: !input log_dismiss_name
              message: !input log_dismiss_message
          - sequence: !input dismiss_actions
          - repeat:
              for_each: !input notify_devices
              sequence:
                - choose:
                    - conditions:
                        - condition: template
                          value_template: "{{ repeat.item.action.startswith('notify.mobile_app') }}"
                      sequence:
                        - action: "{{ repeat.item.action }}"
                          data:
                            title: !input dismiss_title
                            message: !input dismiss_message
                            data:
                              tag: !input notification_tag
    default:
      - alias: Timeout fallback
        service: logbook.log
        data:
          name: Timeout reached
          message: "No one responded within the timeout. Executing dismiss actions."
      - sequence: !input dismiss_actions
      - repeat:
          for_each: !input notify_devices
          sequence:
            - choose:
                - conditions:
                    - condition: template
                      value_template: "{{ repeat.item.action.startswith('notify.mobile_app') }}"
                  sequence:
                    - action: "{{ repeat.item.action }}"
                      data:
                        title: !input dismiss_title
                        message: !input dismiss_message
                        data:
                          tag: !input notification_tag
